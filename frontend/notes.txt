Frontend:
---------
    The technology used to develop webpages/websites/web application.
    1.Html(Hypertext Markup Language)
    2.CSS(Cascading Style Sheets)
    3.JS(javascript)

Html:
-----
   - It is a markup language. 
   - It is used for structuring/layout the webpage.
Css:
----
   - it is used for styling the webpage.
   - It is a style sheet language.
Javascript:
-----------
   - It is a programming/scripting language.
   - It is used for adding functionality to the webpage.


Backend:
--------
   - It is the server side of the web application.
   - It is used to handle the data and logic of the web application.
   - It is used to connect the frontend with the database.

   ex: Java , PHP , Python, Node js etc .,

Database:
---------
    - It is a container for storing/managing/retrieving the data.
   ex: MySQL , MongoDB , Oracle etc .

FullStack:
----------
   - It is a combination of frontend and backend development
     (server side+database).

static website/web pages:
------------------------
          - the webpage/website is same for all the users.
          - It is static in nature.
          ex: wikipedia ,blogs etc.
dynamic website/web pages:
-------------------------
          - the webpage/website is different for all the users.
          - It is dynamic in nature.
          ex: facebook , youtube , amazon etc.


Single page application:(SPA)
-------------------------
          - It is a web application that has only one html page.
    ex: amazon , gmail ,netflix etc.

Multi page application:(MPA)
-----------------------
         - It is a web application that has multiple html pages.
     ex: flipkart , youtube etc.

Library:
---------
          - It is a collection of reusable code.
          - The code can be used in multiple projects.
          - can call library into our project whenever required.
          ex: jQuery , Bootstrap , React etc.

Framework:
---------
          - It is a collection of libraries.
          - The code can be used in multiple projects.
          ex: Angular , Spring , Hibernate etc.
          - Our code will be called into the framework.

Deployment:(Production Deployment)
-----------
       - It is the process of deploying/releasing the web application
         to every one in web(internet).
steps:
-----
   1.develop the web application.(frontend+backend)
   2.Integrate the web application with the database.
   3.compress project into zip or tar or rar file.
   4.upload the zip/tar/rar file to the server.
    (ex: AWS , Digital Ocean,Netlify,render,Heroku,Github pages etc.)
   5.access the web application from the browser.

-----------------------------------------------------------------------------------------

structure of a web page:
--------------------------

tag:
   -it is a keyword in html, 
   - which is used to describe the content of the webpage.
   - and enclosed in angle brackets.
    ex: <html> , <head> , <body> , <h1> , <p> , <a> , <img> etc.

paired tag/container tag:
   - The content is enclosed with the help of opening and closing tag.
    ex: <div> , <span> , <table> , <tr> , <td> , <th> etc.

unpaired tag/self closing tag/non container tag:
   - The content is enclosed with the help of opening tag only.
    ex: <br> , <hr> , <meta> , <link> , <input> , <img> etc.

element:
   - The content is enclosed with the help of paired tag.
    ex: <h1> , <p> , <a> , <img> etc. 


Tags:
-----
   1.heading tags: used to describe the heading of the webpage.
       ex: <h1> , <h2> , <h3> , <h4> , <h5> , <h6> 
   2.paragraph tags: used to describe the paragraph of the webpage.
       ex: <p></p>
   3.Italic tags: used to describe the italics of the webpage.
       ex: <i></i>   <em></em>---emphasis
   4.Bold tags: used to describe the bold of the webpage.
       ex: <b></b>   <strong></strong>
   5.Underline tags: used to describe the underline of the webpage.
       ex: <u></u>
   6.del tags: used to describe the delete content of the webpage.
       ex: <del></del> <strike></strike>
   7.pre tags: used to describe the preformatted text of the webpage.
       ex: <pre></pre>
   8.mark tags: used to describe the marked content of the webpage.
       ex: <mark></mark>
   9.small tags: used to describe the small content of the webpage.
       ex: <small></small>
   10.details tags: used to describe the details of the webpage.
       ex: <details></details>
   11.summary tags: used to describe the summary of the webpage.
       ex: <summary></summary>
   12.break tags: used to  the break  the content.
       ex: <br>
   13.horizontal rule tags: used to have the horizontal rule line.
       ex: <hr>
   14.subscript tags: used to have the subscript of the text.
       ex: <sub></sub>
   15.superscript tags: used to have the superscript of the text.
       ex: <sup></sup>
   16.quote tags: used to have the quote of the text.
       ex: <q></q>
   17.blockquote tags: used to have the blockquote of the text.
       ex: <blockquote></blockquote>
   18.div tags: used to have the div of the text.
       ex: <div></div>
   19.span tags: used to have the span of the text.
       ex: <span></span>

----------------------------------------------------------------------
    div                                      span
----------------------------------------------------------------------
block level element                         inline element

width and height can be                    width and height cannot be
applicable                                    applicable
----------------------------------------------------------------------

----------------------------------------------------------------------
block level element                         inline element
------------------------------------------------------------------------
It occupies the full                   It Occupies required space
width of the page.   

width and height can be                width and height can be
applicable                             applicable
-------------------------------------------------------------------------

to convert block level element to inline element :

    syntax:   
    display:inline
    display:inline-block // can act like block level element and inline

to convert inline element to block level element:
    syntax:
    display:block

CSS:(Cascading Style Sheets)
----
   - It is a style sheet language.
   - It is used to style the webpage.
   - element can style in three ways
                 1.inline style
                 2.internal style
                 3.external style
Inline style:
-------------
   - style element with the help of style attribute.
   syntax: <element style="property1: value1;property2: value2">
           </element>

    - used for styling one element only.
Internal style:
---------------
      - style element with the help of style tag.
      syntax: <style>
                   selector{
                       property1: value1;
                       property2: value2;
                   }
              </style>

    - used for styling multiple elements in one go with in same page.
External style:
---------------
     - style element with the help of external style sheet.
     - style sheet file is created with ____.css(extension)
     syntax: <link rel="stylesheet" href="style.css">
            rel: relationship
            href: hyper reference(file path)
     - used for styling multiple elements in one go with in 
       multiple pages.

Selector:
+++++++++
         - selector is used to select the element to style.
         Types:
            1.element selector
            2.id selector
            3.class selector
            4.grouping selector
            5.attribute selector
            6.universal selector
            7.combined selector
                     1.child selector
                     2.descendant selector
                     3.adjacent sibling selector
                     4.general sibling selector
            8.pseudo class selector
            9.pseudo element selector

1.element selector:
-------------------
        - selector is used to select the element based on tagName
        syntax: tagName{
                    property1: value1;
                    property2: value2;
                }
2.id selector:
-------------------
        - selector is used to select the element based on id
        <element id="idName"></element>
        syntax: #idName{
            
        }
        - id name should be unique.
3.class selector:
-------------------
        - selector is used to select the element based on class
        <element class="className"></element>
        syntax: .className{
        }
        - class name can be used multiple times irrespective of tagName.
        
4.grouping selector:
--------------------
    - selector is used for group of selectors
    syntax:
      selector1, selector2,selector3{

      }

5.universal selector:
---------------------
      - selector is used to select all the elements.
      syntax:
       *{
           margin: 0;
           padding: 0;
           box-sizing: border-box;
      }
6.attribute selector:
---------------------
        - selector is used to select the element based on attribute.
        syntax: [attributeName="attributeValue"]{

          }
7.Combined selector:
-------------------
        - selector is used to select the element based on combined selector.
         Types:
            1.child selector: used to select the direct child of the element.
                            : selector1 > selector2{
                                
                            }  
            2.descendant selector: used to select the direct and indirect child of the element.
                            : selector1 selector2{
                
                            } 
            3.adjacent sibling selector: used to select the adjacent sibling of the element.
                            : selector1 + selector2{
                
                            }
            4.general sibling selector: used to select the general sibling of the element.
                            : selector1 ~ selector2{
                
                            }
             

pseudo element :
-----------------
       used to select an  specific part of an element 
       indicating ::(double colon)
       ex :   
          ::first-letter  , ::first-line  , ::selection  ,:: before  , ::after , ::marker
pseudo class  :
--------------
      used to select based on its state
      indicating with :(colon)
      ex :
       :link  , :active , :visited , :hover 


   +-----------------------------------------------------------------------------------+
   |  Css Specificity Rule:                                                            |
   |  ---------------------                                                            |
   |  Inline > ID > Class/Attribute/Pseudo-class > Element/Pseudo-element > Universal  |                                                              |
   |                                                                                   |       
   +-----------------------------------------------------------------------------------+

Note:
  !important overrides normal specificity, but should be used sparingly.


--------------------------------------------------------------------------------------
font-awesome:
------------
      - it is a library of icons.
       url: https://fontawesome.com/icons
       cdnLink : https://cdnjs.com/libraries/font-awesome
       cdn means content delivery network.,
       which is used to deliver the content to the user from the server.
syntax:
  link cdn link in html file
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

   <i class="fa fa-home"></i>

------------------------------------------------------------------------------------------------------------------

Table and its tags and its attributes 
-------------------------------------

<table></table -- used to create table
<caption></caption>-- to provide caption of the table
<thead></thead> -- used to create head of the table
<tbody></tbody> -- used to create body of the table
<tfoot></tfoot> --used to create footer of the table

<th></th>  --used to write head content(strong text)
<td></td>  --used to write body content


rowspan and colspan -- these are the properties of th and td tags
rowspan-- used to merge the rows
colspan--used to merge the column

attributes of table:
-------------------
      -border 
      -cellpadding: used to add space between the cells 
      -cellspacing: used to add space between the content of the cells
      -bgcolor: used to add  background color to the table
      -width
      -height
      -align: used to align the table horizontally
      -valign : used to align the table vertically

-----------------------------------------------------------

anchor tag:
-----------
      - it is used to link one page to another page.
      - it is used to navigate between the pages.
      - it is used to create hyperlinks.
    syntax:
       <a href="url">
       
       </a>

attributes of anchor tag:
-------------------------
      -href: used to provide the link of the page.
      -target: used to open the link in new tab.
             :_blank - used to open the link in new tab.
             :_self - used to open the link in same tab.
      -download: used to download the file.

states of anchor tag:
---------------------
1.UnVisted state: when the link is not visited.
                : a:link{
                    
                }
                : default color is blue.
2.visited state: when the link is visited.
                : a:visited{
                    
                }
                : default color is purple/violet.
3.active state: when the link is active.
                : a:active{
                    
                }
                : default color is red.
4.hover state: when the link is hovered.
                : a:hover{
                    
                }               
------------------------------------------------------------
MultiMedia Tags:
----------------

img tag :   used for image 
        : attributes:
            src: used to provide the source of the image.
            alt: used to provide the alternative text of the image.
            width: used to provide the width of the image.
            height: used to provide the height of the image.
            title: used to provide the title of the image.
            border: used to provide the border of the image.
            align: used to align the image.
video tag : used for video
        : attributes:
            src,width,height,autoplay,loop,muted
            controls: used to provide the controls of the video.
            poster: used to provide the poster of the video.
audio tag: used for audio
        : attributes:
            src,autoplay,controls,loop,muted

embed tag: used for image , audio and video 
        : attributes:
            src,type,width,height

iframe tag: used for embedding other content
        : attributes:
            src,width,height,frameborder,allowfullscreen
-------------------------------------------------------------------
marquee tag: used for scrolling content
           attributes:
           behavior: used to provide the behavior of the marquee
                   : scroll - default
                   : slide
                   : alternate
                   
           direction: used to provide the direction of the marquee
                    : left-default
                    : right
                    : up
                    : down
            scrollamount, scrolldelay, loop, bgcolor, width, height

----------------------------------------------------------------------
Form Tags:
------------
    1. <form> tag - used to add a form in the web page
         form attributes:
                  action - used to specify the action of the form
                  method - used to specify the method of the form(get/post--default is get)

    2. <input> tag - used to add an input in the form
         input attributes:
                  type - used to specify the type of the input
                       - type can be text, password, email, number, date, time, url, search, tel, color, range, file, submit , reset, checkbox, radio
                  name - used to specify the name of the input
                  value - used to specify the value of the input
                  placeholder - used to specify the placeholder of the input
                  required - used to specify the required of the input
                  disabled - used to specify the disabled of the input
                  checked - used to specify the checked of the input
                  readonly - used to specify the readonly of the input
                  autofocus - used to specify the autofocus of the input
                  autocomplete - used to specify the autocomplete of the input
                  min - used to specify the min of the input
                  max - used to specify the max of the input
                  pattern - used to specify the pattern of the input
                  step - used to specify the step of the input
                  size - used to specify the size of the input
                  list - used to specify the list of the input

    3. <label> tag - used to add a label to the input
    4. <select> tag - used to add a select in the form
    5. <option> tag - used to add an option to the select
    6. <textarea> tag - used to add a textarea in the form
    7. <button> tag - used to add a button in the form
    8. <fieldset> tag - used to add a fieldset in the form
    9. <legend> tag - used to add a legend to the fieldset
------------------------------------------------------------------------------
 flex
 +++++
    - it is used to align elements
    - it is used to distribute space between/around elements
    - It will arrange elements in cross axis and main axis
    - flex container is main division of flex
    - flex items are child of flex container
    - flex container is used to wrap the flex items


    "display : flex" is used to make flex container
    the default direction is row(left to right) 
    "flex-direction : row-reverse; row; column; column-reverse" is used to change the direction
  


row (left to right)  x axis(main axis)  y axis(cross axis)
column(top to bottom) y axis(main axis) x axis(cross axis)



parent properties :
-------------------

flex-direction : it is used to change the direction of the flex container
                 row(default) ; row-reverse; column; column-reverse

justify-content : it is used to align main axis
                 flex-start(default) ; flex-end; centre; space-around; space-between;space-evenly 


align items : it is used to align cross axis
                 flex-start(default) ; flex-end; centre; 

align-content: It is used to align when there is extra space in the cross axis ,similar to 'justify-content' aligns individual items 
                 flex-start(default) ; flex-end; centre; space-around; space-between;space-evenly 

gap: it used to provide gap between the elements 
row-gap: it is used to provide gap between row elements
column-gap: it is used to provide gap between column elements


child properties/flex items:
---------------------------

flex-shrink:  it is used to shrink elements according to width
    default-1
    0-items wont shrink
flex-grow: it is used to grow element size according to width
    default-0
    
order:it is used to re arrange the order of flex-items

justify-self - to provide justify content property , specifically to a flex item
align-self - to provide align items property , specifically to a flex item

---------------
play and Learn:    https://codingfantasy.com/games/flexboxadventure/play
                   https://flexboxfroggy.com/?utm_source=chatgpt.com
----------------



----------------------------------------------------------------------------------

Grid:
-----

    CSS Grid:
    --------
        CSS Grid is a two-dimensional layout system for the web. It allows you to create 
        complex layouts on the web easily by dividing a page into rows and columns, 
        and placing content into grid cells.

                    Flex                         Grid
    -------------------------------------------------------------------------
    Feature     	Flexbox                  	CSS Grid
    Axis	   One-dimensional (row or col)	    Two-dimensional (row & column)
    Layout	    Content-driven	                Layout-driven
    Use Case	Aligning items in a line	    Building full page layouts
    Overlap	    Not possible	                Possible (items can overlap)
    ----------------------------------------------------------------------------
    Grid Properties
    ++++++++++++++++

    Container Properties:
    ---------------------
    display: grid;
    grid-template-rows : used to define the number of rows in a grid layout
                    : 10px 10px 10px
                    : 10% 10% 10%
                    : 1fr 1fr 1fr (fr-fraction)
                    : repeat(3, 10px)
    grid-template-columns: used to define the number of columns in a grid layout
    grid-template-areas: used to define named areas in a grid layout
                    : "header header header"
                        "sidebar content content"
                        "footer footer footer"
    grid-gap / gap: used to set the gap between grid items
    Note : flex box properties can be used inside grid

    Item Properties:
    --------------
    grid-row-start, grid-row-end
    grid-column-start, grid-column-end
    grid-area
    justify-self, align-self


    Applications in Grid
    ---------------------
            Responsive web layouts
            Dashboards with multiple panels
            Image galleries
            Complex magazine-style layouts
            Overlapping content (e.g., cards over images)
            Aligning forms and controls in two dimensions
            
            
            
            
---------------
play and Learn:    https://cssgridgarden.com/
                  
----------------







            

            